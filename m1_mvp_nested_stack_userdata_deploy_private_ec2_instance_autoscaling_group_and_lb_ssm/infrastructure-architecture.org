#+TITLE: Security Group Ports - EC2 Instance Security Configuration
#+AUTHOR: Infrastructure Team
#+VERSION: 1.0

* NAME
security_group_ports - EC2 instance security group configuration for web and management access

* SYNOPSIS
- Port 443/TCP - HTTPS web traffic (SSL/TLS terminated at ALB) and EC2 instance management via AWS Systems Manager (SSM)

* DESCRIPTION
The security group configuration manages access to EC2 instances running in a private subnet,
controlling both web traffic and instance management access. The configuration is implemented
through AWS CloudFormation in the ec2.yml template. CloudWatch monitoring is enabled via the
CloudWatch agent installed on EC2 instances with appropriate IAM roles.

* NETWORK TOPOLOGY
#+begin_example
VPC (10.0.0.0/16)
├── Public Subnet
│   ├── NAT Gateway
│   │   └── Enables private instances to access internet
│   └── Application Load Balancer (Route53 A Record)
│       ├── Listens on Port 443 (HTTPS)
│       ├── SSL/TLS Certificate for HTTPS
│       └── Routes traffic to private instances (Port 80)
│
└── Private Subnet (via NAT Gateway)
    ├── Auto Scaling Group
    │   ├── Launch Template
    │   │   ├── AMI: Amazon Linux 2
    │   │   ├── Instance Type: t2.micro
    │   │   ├── Security Group
    │   │   │   ├── Inbound Port 80: Web Traffic from ALB
    │   │   │   └── Inbound Port 443: SSM Access
    │   │   ├── IAM Role: EC2SSMRole
    │   │   └── UserData: Docker + CloudWatch Agent
    │   │
    │   └── EC2 Instances (Min: 1, Max: 1)
    │       └── Docker Container (Port 80)
    │           └── Web Application: mvp-webserver-with-basic-functions
    │
    └── VPC Endpoints
        ├── SSM Endpoint (Port 443)
        └── SSM Messages Endpoint (Port 443)
#+end_example

* TRAFFIC FLOW
Internet → ALB → EC2 Instances

#+begin_example
┌─────────┐     ┌────────┐     ┌─────┐     ┌──────────────┐
│Internet │ →   │Route53 │ →   │ ALB │ →   │    ASG       │
└─────────┘     └────────┘     └─────┘     │  Instances   │
    │               │            │          │ ┌──────────┐  │
    │               ↓            ↓          │ │ Docker   │  │
    │          DNS Record    Certificate    │ │Container │  │
    │               │            │          │ │(Port 80) │  │
    │               │            │          │ │Web App   │  │
    │               │            │          │ └──────────┘  │
    │               │            │          └──────────────┘
    └───────────────┴────────────┘                │
           DNS → HTTPS (443) + ACM                 │
                     HTTP (80) → → → → → → → → → →─┘
                                │
┌─────────┐     ┌─────┐         │
│Internet │ ←── │ NAT │ ← · · ·─┤ (Updates/Packages)
└─────────┘     └─────┘         │
                                │
SSM & CloudWatch                 │
┌─────────┐                     │
│AWS SSM  │ → → → → → → → → → →─┤
└─────────┘     HTTPS (443)     │
                                │
┌───────────┐                   │
│CloudWatch │ ← ← ← ← ← ← ← ← ←─┘
└───────────┘    Agent (Logs & Metrics)
#+end_example

* PORTS
** 443/TCP (ALB)
- Purpose: HTTPS web traffic and EC2 instance management
- Source: 0.0.0.0/0
- Target: ALB (HTTPS) and SSM endpoints
- Flow: Internet → ALB (HTTPS:443) → EC2 Instance (HTTP:80)
- Flow: AWS SSM → VPC Endpoint → EC2 Instance

** 80/TCP (Internal)
- Purpose: Web application traffic from ALB
- Source: ALB Security Group
- Target: Docker container running mvp-webserver-with-basic-functions
- Flow: ALB → EC2 Instance → Docker Container (Web App)

* SECURITY CONSIDERATIONS
** Network Isolation
- EC2 instances are placed in private subnets
- No direct internet access to instances
- Web traffic must flow through ALB

** Access Control
- Web traffic (80/TCP) is controlled via ALB
- Management access (443/TCP) is restricted to SSM
- Instance security group acts as instance-level firewall

** Management
- SSM provides secure instance management without SSH
- VPC endpoints ensure private SSM communication
- Auto Scaling Group manages instance lifecycle
- CloudWatch agent provides monitoring and logging capabilities

** Monitoring
- CloudWatch agent installed and configured on instances
- IAM roles grant necessary CloudWatch permissions
- Performance metrics and logs collection enabled
- Docker container logs forwarded to CloudWatch

* DNS CONFIGURATION
- Route53 A record for application domain
- Alias record pointing to ALB DNS name
- Enables domain name access to application
- Integrated with SSL/TLS certificate for secure access

* SSL/TLS CONFIGURATION
- HTTPS termination at ALB
- ACM certificate attached to ALB listener
- Secure communication between clients and ALB
- Internal traffic (ALB to instances) over HTTP

* SEE ALSO
ec2.yml(5), vpc(7), alb(7), ssm(7), cloudwatch(7), acm(7), route53(7)
